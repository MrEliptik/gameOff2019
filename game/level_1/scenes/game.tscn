[gd_scene load_steps=27 format=2]

[ext_resource path="res://game/level_1/scripts/Node2D.gd" type="Script" id=1]
[ext_resource path="res://tileset.png" type="Texture" id=2]
[ext_resource path="res://game/level_1/scripts/KinematicBody2D.gd" type="Script" id=3]
[ext_resource path="res://transparent PNG/idle/frame-1.png" type="Texture" id=4]
[ext_resource path="res://transparent PNG/idle/frame-2.png" type="Texture" id=5]
[ext_resource path="res://transparent PNG/faint/frame-1.png" type="Texture" id=6]
[ext_resource path="res://transparent PNG/faint/frame-2.png" type="Texture" id=7]
[ext_resource path="res://transparent PNG/faint/frame-3.png" type="Texture" id=8]
[ext_resource path="res://transparent PNG/jump fall/frame.png" type="Texture" id=9]
[ext_resource path="res://transparent PNG/jump up/frame.png" type="Texture" id=10]
[ext_resource path="res://transparent PNG/run/frame-1.png" type="Texture" id=11]
[ext_resource path="res://transparent PNG/run/frame-2.png" type="Texture" id=12]
[ext_resource path="res://transparent PNG/run/frame-3.png" type="Texture" id=13]
[ext_resource path="res://transparent PNG/run/frame-4.png" type="Texture" id=14]
[ext_resource path="res://game/level_1/scenes/Camera2D.gd" type="Script" id=15]
[ext_resource path="res://score.tscn" type="PackedScene" id=16]
[ext_resource path="res://game/Dead_screen.tscn" type="PackedScene" id=17]
[ext_resource path="res://log.tscn" type="PackedScene" id=18]

[sub_resource type="ConvexPolygonShape2D" id=1]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="TileSet" id=3]
0/name = "tileset.png 0"
0/texture = ExtResource( 2 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 16, 16 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 1 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0
1/name = "tileset.png 1"
1/texture = ExtResource( 2 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 16, 0, 16, 16 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
1/z_index = 0

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 26.8102, 35.4349 )

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ ExtResource( 4 ), ExtResource( 5 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 6 ), ExtResource( 7 ), ExtResource( 8 ) ],
"loop": true,
"name": "dead",
"speed": 5.0
}, {
"frames": [ ExtResource( 9 ) ],
"loop": true,
"name": "jump_fall",
"speed": 5.0
}, {
"frames": [ ExtResource( 9 ) ],
"loop": true,
"name": "fall",
"speed": 5.0
}, {
"frames": [ ExtResource( 10 ) ],
"loop": true,
"name": "jump_up",
"speed": 5.0
}, {
"frames": [ ExtResource( 11 ), ExtResource( 12 ), ExtResource( 13 ), ExtResource( 14 ) ],
"loop": true,
"name": "run",
"speed": 15.0
} ]

[sub_resource type="Shader" id=7]
code = "// define shader type
shader_type canvas_item;

// Variable accessible outside of the shader
uniform float vignette_radius;

/*
https://math.stackexchange.com/questions/198764/how-to-know-if-a-point-is-inside-a-circle
The distance between ⟨xc,yc⟩ and ⟨xp,yp⟩ is given by the Pythagorean theorem as
d=(xp−xc)2+(yp−yc)2−−−−−−−−−−−−−−−−−−√.
The point ⟨xp,yp⟩ is inside the circle if d<r, on the circle if d=r, and outside the circle if d>r. 
You can save yourself a little work by comparing d2 with r2 instead: 
the point is inside the circle if d2<r2, on the circle if d2=r2, and outside the circle if d2>r2. 
Thus, you want to compare the number (xp−xc)2+(yp−yc)2 with r2.
*/

/*
Check if point is inside the circle
    Point to check: vec2 point
    Circle center: vec2 ccircle
    Circle radius: r
Return true if inside circle, false otherwise
*/
bool isInsideCircle(vec2 point, vec2 ccircle, float r){
    return (pow(point.x-ccircle.x, 2) + pow(point.y-ccircle.y, 2)) < pow(r, 2.0); 
}

void fragment(){
	// Put the input pixel in a variable
	vec2 uv = UV;
	
	// 0.5 because vignette is always at the center
	if(isInsideCircle(uv, vec2(0.5, 0.5), vignette_radius)){
	    // Pixel is kept the same
		// SCREEN TEXTURE & UV are used to get
		// what's being the ColorRect
		COLOR = texture(SCREEN_TEXTURE, SCREEN_UV)
	} 
	else{
	    // Pixel is drawn black
	    // edit uv here and then put it back to
	    // the out variable COLOR
	    COLOR.rgb = vec3(0); // 0 black, 1 white
	}

}

	// Sample the texture
	//vec4 tex_color = texture(TEXTURE, UV);
	
	//float len = length(UV - vec2(0.5));

    //COLOR = vec4(tex_color.rgb * vec3(1.0 - len), 0.1);"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/vignette_radius = 0.5

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 5396.03, 10 )

[node name="Game" type="Node2D"]
script = ExtResource( 1 )

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource( 3 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( 1048722, 0, 0, 1048723, 0, 0, 1048724, 0, 0, 1048725, 0, 0, 1048726, 0, 0, 1048727, 0, 0, 1048728, 0, 0, 1245368, 0, 0, 1245369, 0, 0, 1245370, 0, 0, 1245371, 0, 0, 1245372, 0, 0, 1376308, 0, 0, 1376309, 0, 0, 1376310, 0, 0, 1376311, 0, 0, 1376312, 0, 0, 1376313, 0, 0, 1441928, 0, 0, 1441929, 0, 0, 1441930, 0, 0, 1441931, 0, 0, 1441932, 0, 0, 1573033, 0, 0, 1573034, 0, 0, 1573035, 0, 0, 1638434, 0, 0, 1638435, 0, 0, 1638436, 0, 0, 1638437, 0, 0, 1638438, 0, 0, 1638439, 0, 0, 1638440, 0, 0, 1638441, 0, 0, 1638442, 0, 0, 1638443, 0, 0, 1769575, 0, 0, 1769576, 0, 0, 1769577, 0, 0, 1769578, 0, 0, 1769579, 0, 0, 1769580, 0, 0, 1769581, 0, 0, 1769591, 0, 0, 1769592, 0, 0, 1769593, 0, 0, 1769594, 0, 0, 1769595, 0, 0, 1769596, 0, 0, 1769597, 0, 0, 1769598, 0, 0, 1769599, 0, 0, 1966076, 0, 0, 1966077, 0, 0, 1966078, 0, 0, 1966079, 0, 0, 1900544, 0, 0, 1900545, 0, 0, 1900546, 0, 0, 1900547, 0, 0, 1900548, 0, 0, 1900549, 0, 0, 1900550, 0, 0, 1900551, 0, 0, 1900552, 0, 0, 1900553, 0, 0, 1900554, 0, 0, 1900555, 0, 0, 1900556, 0, 0, 1900557, 0, 0, 1900558, 0, 0, 1900559, 0, 0, 1900560, 0, 0, 1900561, 0, 0, 1900562, 0, 0, 1900563, 0, 0, 1900564, 0, 0, 1900565, 0, 0, 2097223, 0, 0, 2097224, 0, 0, 2097225, 0, 0, 2097226, 0, 0, 2097227, 0, 0, 2097228, 0, 0, 2097241, 0, 0, 2097242, 0, 0, 2097243, 0, 0, 2097244, 0, 0, 2097245, 0, 0, 2097246, 0, 0, 2097247, 0, 0, 2097248, 0, 0 )

[node name="player" type="KinematicBody2D" parent="."]
script = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="player"]
position = Vector2( -2.16872, -0.676552 )
shape = SubResource( 4 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="player"]
position = Vector2( -2.86977, 0.404599 )
scale = Vector2( 0.17974, 0.17974 )
frames = SubResource( 5 )
animation = "idle"

[node name="Camera2D" type="Camera2D" parent="player"]
offset = Vector2( 200, 50 )
current = true
smoothing_enabled = true
smoothing_speed = 4.0
script = ExtResource( 15 )

[node name="CanvasLayer3" type="CanvasLayer" parent="player/Camera2D"]

[node name="Vignette" type="ColorRect" parent="player/Camera2D/CanvasLayer3"]
material = SubResource( 8 )
margin_right = 1920.0
margin_bottom = 1080.0

[node name="CanvasLayer" type="CanvasLayer" parent="player/Camera2D"]

[node name="HUD" parent="player/Camera2D/CanvasLayer" instance=ExtResource( 16 )]
margin_top = -7.02271
margin_bottom = -7.02271

[node name="CanvasLayer2" type="CanvasLayer" parent="player/Camera2D"]

[node name="Dead_screen" parent="player/Camera2D/CanvasLayer2" instance=ExtResource( 17 )]
visible = false

[node name="Timer" type="Timer" parent="player"]
wait_time = 0.5
one_shot = true

[node name="Ground" type="Node2D" parent="."]
editor/display_folded = true

[node name="StaticBody2D" type="StaticBody2D" parent="Ground"]
editor/display_folded = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground/StaticBody2D"]
position = Vector2( 5282.48, 1233.63 )
shape = SubResource( 6 )

[node name="Control" type="Control" parent="."]
editor/display_folded = true
visible = false
margin_right = 40.0
margin_bottom = 40.0

[node name="HBoxContainer" type="HBoxContainer" parent="Control"]
margin_right = 40.0
margin_bottom = 40.0

[node name="TextureRect" type="TextureRect" parent="Control/HBoxContainer"]
margin_bottom = 40.0

[node name="Controls" type="Label" parent="Control/HBoxContainer"]
margin_left = 4.0
margin_top = 13.0
margin_right = 4.0
margin_bottom = 27.0

[node name="Log" parent="." instance=ExtResource( 18 )]
position = Vector2( 658.539, 393.133 )
[connection signal="timeout" from="player/Timer" to="player" method="_on_Timer_timeout"]
